@model RSHCEnteties.Enteties.RSHCOffBoarding

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<main id="main">

    <!-- ======= Breadcrumbs ======= -->
    <section class="breadcrumbs">
        <div class="container">

            <div class="d-flex justify-content-between align-items-center">
                <h2>@ViewBag.Title</h2>
                <ol>
                    <li>@Html.ActionLink("RSHC Demo", "Index", "Home", new { area = "" }, new { @class = "logo me-auto me-lg-0" })</li>
                    <li>@ViewBag.Title</li>
                </ol>
            </div>

        </div>
    </section><!-- End Breadcrumbs -->

    <section class="inner-page">
        <section id="portfolio-details" class="portfolio-details">
            <div class="container">

                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        <h4>RSHC Off Boarding</h4>
                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="row gy-4">
                            <div class="col-lg-6">
                                <div class="portfolio-info">
                                    <h3>Off Boarding process information</h3>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.BoardingStatus, htmlAttributes: new { @class = "control-label col-md-6" })

                                        @Html.EnumDropDownListFor(model => model.BoardingStatus, htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.BoardingStatus, "", new { @class = "text-danger" })

                                    </div>

                                    <br />

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.OffBoardingStarted, htmlAttributes: new { @class = "control-label col-md-6" })

                                        @Html.EditorFor(model => model.OffBoardingStarted, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.OffBoardingStarted, "", new { @class = "text-danger" })
                                    </div>

                                    <br />

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.OffBoardingCompleted, htmlAttributes: new { @class = "control-label col-md-6" })

                                        @Html.EditorFor(model => model.OffBoardingCompleted, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.OffBoardingCompleted, "", new { @class = "text-danger" })
                                    </div>

                                    <br />

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.DeleteO365ZoomUserBy, htmlAttributes: new { @class = "control-label col-md-6" })

                                        @Html.EditorFor(model => model.DeleteO365ZoomUserBy, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.DeleteO365ZoomUserBy, "", new { @class = "text-danger" })

                                    </div>

                                </div>
                            </div>
                            <div class="col-lg-6">
                                <div class="portfolio-info">
                                    <h3>Employee information</h3>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.RSHCEmployeeId, "RSHCEmployeeId", htmlAttributes: new { @class = "control-label col-md-6" })

                                        @Html.DropDownList("RSHCEmployeeId", null, htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.RSHCEmployeeId, "", new { @class = "text-danger" })

                                    </div>

                                </div>
                            </div>

                        </div>


                        <div class="portfolio-description">





                            <h2>O365</h2>

                            <ul class="list-group list-group-flush">

                                <li class="list-group-item">
                                    @Html.LabelFor(model => model.O365WipeMobileDevices, htmlAttributes: new { @class = "control-label col-md-6" })

                                    <div class="checkbox">
                                        @Html.EditorFor(model => model.O365WipeMobileDevices)
                                        @Html.ValidationMessageFor(model => model.O365WipeMobileDevices, "", new { @class = "text-danger" })
                                    </div>
                                </li>




                                <li class="list-group-item">
                                    @Html.LabelFor(model => model.O365PasswordChanged, htmlAttributes: new { @class = "control-label col-md-6" })

                                    <div class="checkbox">
                                        @Html.EditorFor(model => model.O365PasswordChanged)
                                        @Html.ValidationMessageFor(model => model.O365PasswordChanged, "", new { @class = "text-danger" })
                                    </div>
                                </li>

                                <li class="list-group-item">
                                    @Html.LabelFor(model => model.O365ForceLogout, htmlAttributes: new { @class = "control-label col-md-6" })

                                    <div class="checkbox">
                                        @Html.EditorFor(model => model.O365ForceLogout)
                                        @Html.ValidationMessageFor(model => model.O365ForceLogout, "", new { @class = "text-danger" })
                                    </div>
                                </li>

                                <li class="list-group-item">
                                    @Html.LabelFor(model => model.O365ClearContactInfo, htmlAttributes: new { @class = "control-label col-md-6" })

                                    <div class="checkbox">
                                        @Html.EditorFor(model => model.O365ClearContactInfo)
                                        @Html.ValidationMessageFor(model => model.O365ClearContactInfo, "", new { @class = "text-danger" })
                                    </div>
                                </li>

                                <li class="list-group-item">
                                    @Html.LabelFor(model => model.O365AddTerminatedTitle, htmlAttributes: new { @class = "control-label col-md-6" })

                                    <div class="checkbox">
                                        @Html.EditorFor(model => model.O365AddTerminatedTitle)
                                        @Html.ValidationMessageFor(model => model.O365AddTerminatedTitle, "", new { @class = "text-danger" })
                                    </div>
                                </li>

                                <li class="list-group-item">
                                    @Html.LabelFor(model => model.O365RemoveFromGroups, htmlAttributes: new { @class = "control-label col-md-6" })

                                    <div class="checkbox">
                                        @Html.EditorFor(model => model.O365RemoveFromGroups)
                                        @Html.ValidationMessageFor(model => model.O365RemoveFromGroups, "", new { @class = "text-danger" })
                                    </div>
                                </li>
                                <li class="list-group-item">
                                    @Html.LabelFor(model => model.O365SetAutoreply, htmlAttributes: new { @class = "control-label col-md-6" })

                                    <div class="checkbox">
                                        @Html.EditorFor(model => model.O365SetAutoreply)
                                        @Html.ValidationMessageFor(model => model.O365SetAutoreply, "", new { @class = "text-danger" })
                                    </div>
                                </li>

                                <li class="list-group-item">
                                    @Html.LabelFor(model => model.O365SetHideFromGAL, htmlAttributes: new { @class = "control-label col-md-6" })

                                    <div class="checkbox">
                                        @Html.EditorFor(model => model.O365SetHideFromGAL)
                                        @Html.ValidationMessageFor(model => model.O365SetHideFromGAL, "", new { @class = "text-danger" })
                                    </div>
                                </li>

                            </ul>

                            <br />
                            <h2>NetDoc</h2>
                            <ul class="list-group list-group-flush">
                                <li class="list-group-item">
                                    @Html.LabelFor(model => model.NetDoctsCheckInAllDocs, htmlAttributes: new { @class = "control-label col-md-6" })

                                    <div class="checkbox">
                                        @Html.EditorFor(model => model.NetDoctsCheckInAllDocs)
                                        @Html.ValidationMessageFor(model => model.NetDoctsCheckInAllDocs, "", new { @class = "text-danger" })
                                    </div>
                                </li>

                                <li class="list-group-item">
                                    @Html.LabelFor(model => model.NetDocUserGUIDToWorksheet, htmlAttributes: new { @class = "control-label col-md-6" })

                                    <div class="checkbox">
                                        @Html.EditorFor(model => model.NetDocUserGUIDToWorksheet)
                                        @Html.ValidationMessageFor(model => model.NetDocUserGUIDToWorksheet, "", new { @class = "text-danger" })
                                    </div>
                                </li>

                                <li class="list-group-item">
                                    @Html.LabelFor(model => model.NetDocCheckDeletedDocuments, htmlAttributes: new { @class = "control-label col-md-6" })

                                    <div class="checkbox">
                                        @Html.EditorFor(model => model.NetDocCheckDeletedDocuments)
                                        @Html.ValidationMessageFor(model => model.NetDocCheckDeletedDocuments, "", new { @class = "text-danger" })
                                    </div>
                                </li>

                                <li class="list-group-item">
                                    @Html.LabelFor(model => model.NetDoCloseAuthorID, htmlAttributes: new { @class = "control-label col-md-6" })

                                    <div class="checkbox">
                                        @Html.EditorFor(model => model.NetDoCloseAuthorID)
                                        @Html.ValidationMessageFor(model => model.NetDoCloseAuthorID, "", new { @class = "text-danger" })
                                    </div>
                                </li>

                                <li class="list-group-item">
                                    @Html.LabelFor(model => model.NetDocCheckPersonalMatter, htmlAttributes: new { @class = "control-label col-md-6" })

                                    <div class="checkbox">
                                        @Html.EditorFor(model => model.NetDocCheckPersonalMatter)
                                        @Html.ValidationMessageFor(model => model.NetDocCheckPersonalMatter, "", new { @class = "text-danger" })
                                    </div>
                                </li>
                                <li class="list-group-item">

                                    @Html.LabelFor(model => model.NetDocDeleteMobileDevice, htmlAttributes: new { @class = "control-label col-md-6" })

                                    <div class="checkbox">
                                        @Html.EditorFor(model => model.NetDocDeleteMobileDevice)
                                        @Html.ValidationMessageFor(model => model.NetDocDeleteMobileDevice, "", new { @class = "text-danger" })
                                    </div>
                                </li>

                                <li class="list-group-item">
                                    @Html.LabelFor(model => model.NetDocTermUser, htmlAttributes: new { @class = "control-label col-md-6" })

                                    <div class="checkbox">
                                        @Html.EditorFor(model => model.NetDocTermUser)
                                        @Html.ValidationMessageFor(model => model.NetDocTermUser, "", new { @class = "text-danger" })
                                    </div>
                                </li>

                            </ul>
                            <br />



                            <h2>Sharefile</h2>
                            <ul class="list-group list-group-flush">
                                <li class="list-group-item">
                                    @Html.LabelFor(model => model.SharefileDisableAccount, htmlAttributes: new { @class = "control-label col-md-6" })

                                    <div class="checkbox">
                                        @Html.EditorFor(model => model.SharefileDisableAccount)
                                        @Html.ValidationMessageFor(model => model.SharefileDisableAccount, "", new { @class = "text-danger" })
                                    </div>
                                </li>
                                <li class="list-group-item">
                                    @Html.LabelFor(model => model.SharefileLicensed, htmlAttributes: new { @class = "control-label col-md-6" })

                                    <div class="checkbox">
                                        @Html.EditorFor(model => model.SharefileLicensed)
                                        @Html.ValidationMessageFor(model => model.SharefileLicensed, "", new { @class = "text-danger" })
                                    </div>
                                </li>
                                <li class="list-group-item">
                                    @Html.LabelFor(model => model.SharefileRemoveLicense, htmlAttributes: new { @class = "control-label col-md-6" })

                                    <div class="checkbox">
                                        @Html.EditorFor(model => model.SharefileRemoveLicense)
                                        @Html.ValidationMessageFor(model => model.SharefileRemoveLicense, "", new { @class = "text-danger" })
                                    </div>
                                </li>
                                <li class="list-group-item">
                                    @Html.LabelFor(model => model.SharefileFoldersToSupport, htmlAttributes: new { @class = "control-label col-md-6" })

                                    <div class="checkbox">
                                        @Html.EditorFor(model => model.SharefileFoldersToSupport)
                                        @Html.ValidationMessageFor(model => model.SharefileFoldersToSupport, "", new { @class = "text-danger" })
                                    </div>
                                </li>
                            </ul>


                            <br />

                            <h2>Other</h2>

                            <ul class="list-group list-group-flush">

                                <li class="list-group-item">
                                    @Html.LabelFor(model => model.ZoomForwardToReception, htmlAttributes: new { @class = "control-label col-md-6" })

                                    <div class="checkbox">
                                        @Html.EditorFor(model => model.ZoomForwardToReception)
                                        @Html.ValidationMessageFor(model => model.ZoomForwardToReception, "", new { @class = "text-danger" })
                                    </div>
                                </li>

                                <li class="list-group-item">
                                    @Html.LabelFor(model => model.PCWiped, htmlAttributes: new { @class = "control-label col-md-6" })

                                    <div class="checkbox">
                                        @Html.EditorFor(model => model.PCWiped)
                                        @Html.ValidationMessageFor(model => model.PCWiped, "", new { @class = "text-danger" })
                                    </div>
                                </li>


                                <li class="list-group-item">
                                    @Html.LabelFor(model => model.KeycardsPhysicallyDisable, htmlAttributes: new { @class = "control-label col-md-6" })

                                    <div class="checkbox">
                                        @Html.EditorFor(model => model.KeycardsPhysicallyDisable)
                                        @Html.ValidationMessageFor(model => model.KeycardsPhysicallyDisable, "", new { @class = "text-danger" })
                                    </div>
                                </li>

                                <li class="list-group-item">
                                    @Html.LabelFor(model => model.ChicagoInformBuilding, htmlAttributes: new { @class = "control-label col-md-6" })

                                    <div class="checkbox">
                                        @Html.EditorFor(model => model.ChicagoInformBuilding)
                                        @Html.ValidationMessageFor(model => model.ChicagoInformBuilding, "", new { @class = "text-danger" })
                                    </div>
                                </li>

                                <li class="list-group-item">
                                    @Html.LabelFor(model => model.PSTArchiveContent, htmlAttributes: new { @class = "control-label col-md-6" })

                                    <div class="checkbox">
                                        @Html.EditorFor(model => model.PSTArchiveContent)
                                        @Html.ValidationMessageFor(model => model.PSTArchiveContent, "", new { @class = "text-danger" })
                                    </div>
                                </li>

                                <li class="list-group-item">
                                    @Html.LabelFor(model => model.PSTSavedToPSTOrNAS, htmlAttributes: new { @class = "control-label col-md-6" })

                                    <div class="checkbox">
                                        @Html.EditorFor(model => model.PSTSavedToPSTOrNAS)
                                        @Html.ValidationMessageFor(model => model.PSTSavedToPSTOrNAS, "", new { @class = "text-danger" })
                                    </div>
                                </li>

                                <li class="list-group-item">
                                    @Html.LabelFor(model => model.O365ZoomDeleteUser, htmlAttributes: new { @class = "control-label col-md-6" })

                                    <div class="checkbox">
                                        @Html.EditorFor(model => model.O365ZoomDeleteUser)
                                        @Html.ValidationMessageFor(model => model.O365ZoomDeleteUser, "", new { @class = "text-danger" })
                                    </div>
                                </li>

                                <li class="list-group-item">
                                    @Html.LabelFor(model => model.RSHCDevicesReturned, htmlAttributes: new { @class = "control-label col-md-6" })

                                    <div class="checkbox">
                                        @Html.EditorFor(model => model.RSHCDevicesReturned)
                                        @Html.ValidationMessageFor(model => model.RSHCDevicesReturned, "", new { @class = "text-danger" })
                                    </div>
                                </li>


                                <li class="list-group-item">
                                    @Html.LabelFor(model => model.AdobeAcrobatDeleteUser, htmlAttributes: new { @class = "control-label col-md-6" })

                                    <div class="checkbox">
                                        @Html.EditorFor(model => model.AdobeAcrobatDeleteUser)
                                        @Html.ValidationMessageFor(model => model.AdobeAcrobatDeleteUser, "", new { @class = "text-danger" })
                                    </div>
                                </li>

                                <li class="list-group-item">
                                    @Html.LabelFor(model => model.FaxPlusDeleteUser, htmlAttributes: new { @class = "control-label col-md-6" })

                                    <div class="checkbox">
                                        @Html.EditorFor(model => model.FaxPlusDeleteUser)
                                        @Html.ValidationMessageFor(model => model.FaxPlusDeleteUser, "", new { @class = "text-danger" })
                                    </div>
                                </li>

                                <li class="list-group-item">
                                    @Html.LabelFor(model => model.NordLayerDeleteUser, htmlAttributes: new { @class = "control-label col-md-6" })

                                    <div class="checkbox">
                                        @Html.EditorFor(model => model.NordLayerDeleteUser)
                                        @Html.ValidationMessageFor(model => model.NordLayerDeleteUser, "", new { @class = "text-danger" })
                                    </div>
                                </li>

                                <li class="list-group-item">
                                    @Html.LabelFor(model => model.ITimekeepDeleteUser, htmlAttributes: new { @class = "control-label col-md-6" })

                                    <div class="checkbox">
                                        @Html.EditorFor(model => model.ITimekeepDeleteUser)
                                        @Html.ValidationMessageFor(model => model.ITimekeepDeleteUser, "", new { @class = "text-danger" })
                                    </div>

                                </li>


                            </ul>
                        </div>

                    </div>

                    <br />

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Create" class="btn btn-outline-dark" />
                        </div>
                    </div>

                }
                <br />
                @Html.ActionLink("Back to List", "Index")
            </div>


            <div>
            </div>
        </section>
    </section>

</main><!-- End #main -->
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
